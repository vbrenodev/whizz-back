c
n
c
resource.deleted_at?
n
resource
warden.authenticate!(auth_options)
c
resource.update(deleted_at: nil)
c
resource
c
resource
resource[:deleted_at]
c
resource[:deleted_at]
resource
resource.deleted_at
c
resource
n
warden
user
:user
resource
auth_options
c
resource == current_user
current_user
resource
c
account_update_params
devise_parameter_sanitizer.sanitize(:account_update)
c
devise_parameter_sanitizer.sanitize(:account_update)
account_update_params
c
devise_parameter_sanitizer.sanitize(:account_update)
cdevise_parameter_sanitizer.sanitize(:account_update)
account_update_params
c
account_update_params
n
c
account_update_params.reject! { |k, v| v.blank? && k.in?(%w[name email password password_confirmation]) }
n
update_resource(resource, account_update_params)
n
resource
n
c
account_update_params
c
account_update_params
account_update_params.reject! { |k, v| v.blank? && k.in?(%w[name email password password_confirmation]) }
c
resource.save
build_resource(sign_up_params)
sign_up_params
c
params.permit(:id)
params[:id]
params
permitted_params
find_user
c
n
c
Devise.sign_out_all_scopes
c
warden.authenticate!(auth_options)
auth_options
self.resource
c
request
JWT.decode(request.headers['Authorization'].split[1],Rails.application.credentials.devise[:jwt_secret_key]).first
                 Rails.application.credentials.devise[:jwt_secret_key]).first
JWT.decode(request.headers['Authorization'].split[1],
request.headers['Authorization']
c
JWT.decode(request.headers['Authorization']).split(' ')[1]
c
update_resource(resource, account_update_params)
account_update_params
resource
n
c
n
c
account_update_params
n
user
c
account_update_params
c
account_update_params
c
account_update_params
n
c
account_update_params
n
account_update_params
devise_parameter_sanitizer.sanitize(:account_update)
c
sign_up_params
account_param
account_update_params
c
account_update_params
devise_parameter_sanitizer.sanitize[:account_update_params]
devise_parameter_sanitizer.sanitize(:users)
c
account_update_params
c
account_update_params
c
account_update_params
c
account_update_params
c
{ message: message || 'teste', resource: resource }
   102:       }, status: :ok
   101:         user: resource
   100:         message: message || 'Signed up successfully.',
render json: {
message
resource
c
n
c
n
current_user.nil?
current_user
c
build_resource(permitted_params)
c
params.permitc
permitted_params
params
account_update_params
c
account_update_params
devise_parameter_sanitizer
c
presence: true
c
sign_up_params
presence: true
sign_up_params
c
sign_up_params
c
resource.changed?
c
warden
current_user.nil?
resource.active_for_authentication?
c
resource
resource_updated
c
account_update_params
update_resource(resource, account_update_params)
resource_updated
c
resource_updated
n
find_user_by_email
account_update_params
params
resource_class.to_adapter.get!(send(:"current_#{resource_name}").to_key)
c
resource_class.to_adapter.get!(send(:"current_#{resource_name}").to_key).password
c
resource_name
resource
@user
@user.persisted?
current_user
block_given?
account_update_params
resource
self
send(:"current_#{resource_name}").to_key
resource_name
send(:"current_#{resource_name}")
resource_class.to_adapter
account_update_params
resource
prev_unconfirmed_email
n
resource.respond_to?(:unconfirmed_email)
resource.unconfirmed_email
resource_class.to_adapter.get!(send(:"current_#{resource_name}").to_key)
self.resource
n
self.resource
c
n
params
exit
self.resource
self
c
Devise.sign_out_all_scopes
warden.user
Devise.mappings.keys.first
signed_out
c
password
resource
user
params
password_changed?
new_record?
c
resource
c
resource.persisted?
c
user_signed_in?
User.all
current_user
cookies[_whizz_sessions]
CurrentUser
user
current_user.nil?
c
resource.persisted?
c
resource.persisted?
n
c
resource.persisted?
c
resource.persisted?
c
current_user
c
resource.persisted?
c
permitted_params
permitted_params.merge!(formatted_schedule_date)
permitted_params
formatted_schedule_date
c
message_schedule
c
message_schedule
message_schedule.merge(schedule_date: Time.at(permitted_params[:schedule_date]))
message_schedule
c
message_schedule_params
c
message_schedule_params
